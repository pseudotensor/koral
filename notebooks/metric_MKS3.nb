(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    223193,       4418]
NotebookOptionsPosition[    221220,       4348]
NotebookOutlinePosition[    221601,       4365]
CellTagsIndexPosition[    221558,       4362]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "metric", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coordinates", " ", "r"}], ",", 
    RowBox[{"theta", " ", "grid"}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cx0", "=", 
     RowBox[{"KSx0", "==", "x0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cx3", "=", 
     RowBox[{"KSx3", "==", "x3"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cx1", "=", 
     RowBox[{"KSx1", "==", 
      RowBox[{"R0", "+", 
       RowBox[{"Exp", "[", "x1", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cx2", "=", 
     RowBox[{"KSx2", "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"Tan", "[", 
           RowBox[{"H0", " ", "Pi", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x2", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"MY1", "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["2", "MP0"], 
                    RowBox[{"(", 
                    RowBox[{"MY2", "-", "MY1"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"R0", "+", 
                    RowBox[{"Exp", "[", "x1", "]"}]}], ")"}], "MP0"]]}], 
                  ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", "x2"}]}], ")"}]}]}], ")"}], "-", 
              FractionBox["1", "2"]}], ")"}]}], "]"}], 
          RowBox[{"Tan", "[", 
           RowBox[{"H0", " ", 
            FractionBox["Pi", "2"]}], " ", "]"}]], "+", "1"}], ")"}], 
       RowBox[{"Pi", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"suborg", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"cx0", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
       RowBox[{"cx0", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"cx1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
       RowBox[{"cx1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"cx2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
       RowBox[{"cx2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"cx3", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
       RowBox[{"cx3", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R00", "=", "0"}], ";", 
    RowBox[{"Rin", "=", "2."}], ";", 
    RowBox[{"Rout", "=", "10000"}], ";", " ", 
    RowBox[{"NX", "=", "64"}], ";", 
    RowBox[{"H00", "=", "0.6"}], ";", 
    RowBox[{"NY", "=", "64"}], ";", 
    RowBox[{"miny", "=", "0.001"}], ";", 
    RowBox[{"miny2", "=", "0.1"}], ";", 
    RowBox[{"mpow", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"grid", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"cx2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", 
          RowBox[{"cx1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"R0", "\[Rule]", "R00"}], ",", 
          RowBox[{"H0", "\[Rule]", "H00"}], ",", 
          RowBox[{"MY1", "\[Rule]", "miny"}], ",", 
          RowBox[{"MY2", "\[Rule]", "miny2"}], ",", 
          RowBox[{"MP0", "\[Rule]", "mpow"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"Rin", "-", "R00"}], "]"}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{"Rout", "-", "R00"}], "]"}], ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"Rout", "-", "R00"}], "]"}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"Rin", "-", "R00"}], "]"}]}], "NX"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "0", ",", "1", ",", 
         FractionBox["1", 
          RowBox[{"NY", "+", "1"}]]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.410586452634416*^9, 3.410586464528248*^9}, {
   3.5339854395897217`*^9, 3.533985449131443*^9}, {3.5377181143847218`*^9, 
   3.537718172869254*^9}, {3.537718562419857*^9, 3.537718582139081*^9}, {
   3.5691723203672667`*^9, 3.569172336763172*^9}, {3.56917241979618*^9, 
   3.56917263686476*^9}, {3.569172677376975*^9, 3.569172749840632*^9}, {
   3.5691727904535227`*^9, 3.5691728594614964`*^9}, {3.5691728912952337`*^9, 
   3.569172917133481*^9}, {3.5691729538956947`*^9, 3.5691729971879997`*^9}, {
   3.5691732735497513`*^9, 3.5691734742409973`*^9}, {3.569173624528906*^9, 
   3.56917362780548*^9}, {3.58860641662016*^9, 3.588606479212829*^9}, {
   3.5886065365439672`*^9, 3.588606546258236*^9}, 3.588606626275532*^9, {
   3.5886081336873426`*^9, 3.588608137779841*^9}, {3.588608292137581*^9, 
   3.588608367244275*^9}, {3.588608446799395*^9, 3.5886084897581453`*^9}, {
   3.588608821232793*^9, 3.588608888130925*^9}, {3.588609320371284*^9, 
   3.588609328901149*^9}, {3.606572205439645*^9, 3.6065723687107973`*^9}, {
   3.606572440746704*^9, 3.6065725021085443`*^9}, {3.606572579907769*^9, 
   3.606572663059231*^9}, 3.606572698308967*^9, {3.606648784689945*^9, 
   3.606648901653487*^9}, {3.611994273320477*^9, 3.611994508255052*^9}, {
   3.611994561904682*^9, 3.611994562165373*^9}, {3.6119945971562843`*^9, 
   3.611994599924309*^9}, {3.6126076393773527`*^9, 3.612607658689451*^9}, {
   3.612607721089657*^9, 3.612607721458665*^9}, {3.613384747104806*^9, 
   3.613384763005583*^9}, {3.613384846416335*^9, 3.613384873985682*^9}, {
   3.6241087362544117`*^9, 3.624108744558689*^9}, {3.6241097016001673`*^9, 
   3.62410971778262*^9}, {3.624109780369403*^9, 3.624109806266706*^9}, {
   3.6241099113414087`*^9, 3.624109914895007*^9}, {3.624110692848563*^9, 
   3.6241107943366003`*^9}, {3.624110858891973*^9, 3.6241108762047977`*^9}, {
   3.624110964836877*^9, 3.62411105106082*^9}, 3.6241110934515123`*^9, {
   3.624111155294963*^9, 3.624111172981637*^9}, {3.624111306783031*^9, 
   3.624111380815927*^9}, {3.624111801851636*^9, 3.624111804635021*^9}, {
   3.624111902113378*^9, 3.624111903120791*^9}, 3.624198219210717*^9, {
   3.624199289598732*^9, 3.624199358206212*^9}, {3.6241997394759912`*^9, 
   3.624199861270649*^9}, {3.624200272904107*^9, 3.624200331082337*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"KSx0", "\[Rule]", "x0"}], ",", 
   RowBox[{"KSx1", "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}]}], ",", 
   RowBox[{"KSx2", "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"Cot", "[", 
         FractionBox[
          RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{"H0", " ", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"MY1", "+", 
               RowBox[{
                SuperscriptBox["2", "MP0"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], 
                  ")"}], 
                 RowBox[{"-", "MP0"}]]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "x2"}]}], ")"}]}], "+", "x2"}], ")"}]}], 
         "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{"KSx3", "\[Rule]", "x3"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.611994456031146*^9, 3.6119945096659403`*^9}, 
   3.611994563086686*^9, 3.611994600513578*^9, 3.6126076593748693`*^9, 
   3.612607722070733*^9, 3.6133847783545523`*^9, {3.613384847191496*^9, 
   3.6133848742189074`*^9}, 3.624108746270108*^9, {3.6241098107506037`*^9, 
   3.624109823012995*^9}, 3.6241107160676823`*^9, 3.624110752815436*^9, 
   3.624110794941636*^9, 3.62411088351388*^9, {3.624110981837904*^9, 
   3.62411105211839*^9}, 3.624111095009247*^9, {3.624111157831088*^9, 
   3.624111173535776*^9}, 3.6241113353530703`*^9, 3.624111381479681*^9, 
   3.6241118053685513`*^9, {3.624111900244257*^9, 3.624111903867667*^9}, 
   3.62419460245072*^9, 3.624195014568981*^9, 3.62419821990829*^9, 
   3.624199290176097*^9, {3.624199321845974*^9, 3.6241993586426783`*^9}, {
   3.624199758952718*^9, 3.6241997730039787`*^9}, {3.624199839655262*^9, 
   3.624199882137725*^9}, {3.624200284766738*^9, 3.624200331792297*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPolarPlot", "[", 
  RowBox[{"grid", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "50"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "40"}], "}"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.6119944438982573`*^9, {3.611994730714909*^9, 3.611994731993751*^9}, {
   3.611994770572096*^9, 3.611994778570682*^9}, {3.613384766273961*^9, 
   3.6133847765453157`*^9}, {3.613384838787849*^9, 3.61338484411637*^9}, {
   3.6241087525236883`*^9, 3.6241088030212393`*^9}, {3.6241110322842703`*^9, 
   3.624111065334949*^9}, {3.624111105481876*^9, 3.624111107586257*^9}, {
   3.6241111822352*^9, 3.624111182894273*^9}, {3.624194629795575*^9, 
   3.624194631664662*^9}, {3.6242002222486963`*^9, 3.624200253813777*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, GraphicsComplexBox[CompressedData["
1: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
eeOgzXufwJJF2vjZREMu5eeSoGh8KnhWnRaWZKZuudAnDfzbJfslp2vh3Zq+
ZiEjsiAX3/nDIE8T83U+MJKtlodyNf3626qauNsPL19zQBG+yL+OvPNPHV/w
msd1V1UZUo9k91ZnqeHMiTLfPySpgI/Js4qOQFV81SskIq5aFTaEPlh7YfQ9
eax6ap6euDp8/XJY1DVTCQ/dVk1tM9CAjzv4B55MUMQNqxx3/ZbVBO9H/1I6
/8rjMJ9AgTdJmjC+RXz6xuNyWHEU/0XdmsBjllmU6yqLp4+r2bw0VAvKtxTW
izdK47xv/eO23NKC1q3PPt84JIUl7fc36/NoQ+ldozrsJImnHD819c9EbbDW
PKF05a0Yvv7tpzDarw0Dk2z76oxFcctl3fTYIm14xtvzQyNJCDvv6p4n0K8N
gpcWVLm38OObMuJ7NAx04NeVUy+UA3lx6hr7z+Mm68DJ1ZPXrX7IhfcVum0T
WKUDS29ZXRzyHGRS0kS2OifpwJMypNip3MMUDgrNeH9GB9qFbzhpdrUzT70e
BP+8oQP2P6TNL2f+ZJYxeQPHH+lA67eW9rUFX5mji3JVfzE6cOfSvKCB2Gf0
GnH2y33/bz/inDeRnIc432si30Ocee6SedB+dt75ZF5E3Qeo+wKVB1B5AZUn
UHkD1Qdw+vpN+oJpbJ+fSJ9A9Q0UD0DxAsMsTx8IT5DH8vaN8AYUj3Ce5dWP
8AoUz9DJ8l5DeAdu1oePxAdIYH1RIL4A5RMUsb4pEN+A8hEoXyGK9bmM+AyU
76DHvgf3yHsA4QW75rqtq0O89jPCS/bqY7xz3KrPlb1I+uX7G2Ez9bGyR+q0
nad4QeXksn9BAvp4yIH/e7WdCJhOtZscfEIPf+bXqx7SloTmS/rvV0rr4QN/
Gjd4/JKGo5eSEtZv1cUpKYh3frQc+JtL9ECVDo4s8ou1LlEAk+SKww0mOjj1
u5OVZ5sSGM57q1gerY0Fk798e9ioAvvvLakaztPC/q0hqeF31MD1/iypf4Oa
+AYXb+3NmRrw4FCYTrOTJq7SWFwTsVITPnpjrzt/1PHz6IYJDzW0QFb7ma1s
pBpWaTd6rvpUCx4r8B/V/aSC6748DbwTrA3T4hOPlE1UxkzixK9xX7Vh7QdR
r5InivhA67Doqlk6EMF0m2ZYK+DEWTfyJr/WgZHFH59fuiyHl8vsnFttqQup
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
nwo4n8D4hmLexyWcj2B8RUdvn2Hf23f2PYB7X/d/6i5fVLVNRZ46jfSiSbc6
vs7/TxZq4RZlv7940reur0+/NwCV3Wc7DtV6UvAIsVznzhVQXnl+efEKT1KJ
DRY1DzXEU9cXzy5d8qAtM11mSiwyRd2FTIPfC3vW3q2iRZ/M0ZI84dzx1e4k
vm3HrK4wK/RV2K61rsWNNAOuXZ1yxgYPgk+fCJnmRl9GOqZdemAHm4EiqzLd
XWnW6Ngvwy86YOB/M6ZWbnKhogPis65lOmFytcZspSZnWjbI49qiAmc8/NMv
xWloz7pd6MBAIxeEDZvx4UuiIz0V/7eRfrmg+fHWrWEv7SldePHETetccSrl
9HVdXTsaapOtfH6WG96NVanU2WtDofOCD86r6clR3hRDxK1Jha4fPT/NHZbC
aQF94izJdMbzTSb57tA6u/hUVJs5WcJ/0erP7ni7JbBrm6EZJZP9w7H6Hnga
4Cq95bgJvXS+YpJU4QHbEVGKMdLGNLQqPlrjhQeyX7z6Z7DAgN4ZF+xonOyJ
AwOs1suO1qVBjr4fsq08kXl8ywrfbi1KbZ6hQRmeCGr5qbj3hTqNMFLXP1br
CRd596+1DaDxyVuX7b/piVkqt15IrFxKodGtUQ/eesJs6FPPK7YK1Pbcc4zF
H0/M7qg8Pz9+PqlE/TNSH+yFzwPWF+rpSNEdr5Yrh0S9MFxpcHKq80B2DcH+
wQP/tx/MeWC+B2YeDOfn9eLmBXMfCO6bzN0XTB5g8gKTJwR5t3B5g+kDgr50
uL6gzPdpzfUJpm8M4Xn4yPGANJ4X4niBgKeHHE9geAPDI0p4XidxvGIuz3N/
jme853m35XiHRm8fwPiC7bxPjzmfwPgGxkcwvuJDb58h1tt3TOzX6z1ARdCH
6c3N31Srfq0o/W7jS9VWn0Y5VMtD8exE/wolX7qWFvfx8gJ11FSP2Ov81ofs
8hT2nTXRw+XWkLkVYT4U31Z4t8nVBLNbpV3in3mT2dbZRvXXzXGidPmXrEXe
9PeaSLHYOytM3vnR5s1KL6qd896z8Yot+loPunVovyflHtxyY7+3A9Jayn3k
nnhQdsyvrx8bnLA5+7f6d2EPShBqsNvbxwWBzZN8hku5U+53/cpZwq6IVXri
NE7ZjWzmJ/99+s4Vji7T/9pbuNLJOyd3ll10g+0ul2Mtfi60+cD5jo5sd6zf
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
kPnnODSU3g+0XTXyrgsuWA7csCophNada3B0+OaGXVfoV1F7ME23W9Ge2e6B
k3lPVN7rB9NMp9vHVx70QvP+mMyhZkHkX+PncsXKB0O7s43O9w2kuyt1I+ua
fLF1+6d9gbX+5LzZuVFa0R/zThoc+m7uR1HSiR0N0QFQNjvm8+SHT8/PY63K
/psCsWLaC1/DCm9K/yIh96kqCPI/OlbIKHvR1k//2Z0yDoad68n1C596kHBC
3rU9FIxmjVmFD5PdSc/f9EDajBDs8oszz+x5PxSKz0ztTgnB7v5yTfFXXejC
N1uhbfd7/NzS4fAm2JkW5s84P0QqFH86ZO6dWuhINzYvGVbjEYrx9nKH76TZ
kXqytvinLaEw2j+hblCzNXUtb2pe3BSKoXWiacvlLcnlSNeyOyJh0GpMW2ic
Z0YpNbuaB8wPw1WSM/jeZUwLvjd0jDIOQ7XLW4XWTfq0rdLk8Qz/MBySK8t9
5rGCHnQIvfRPCcNLvc7opTLLKer8xhiRwjCEtDf8jPumRP0UW7cN3BiGL323
d+6fJkOO4zs0M7aFIXTS6uPjzomxa/Tl90v2+99+MOeB+R6YeSCYdys3L5j7
gLkvBHmM5PKAIC9zLi8weYLJGxf5Puq5PiDP97WH6wuCPiu5PsH0DQEP9hwP
SOF5WcTxAgFPWhxPiOF5W8rxBheex7kcj2B4hYDn4RzPmMHz3sLxjmm8D6c4
H1DW2xd08j5d5HwC4xsYH8H4CsZnePG+7+Z8h1Xv9wC1S+2mR+cLg74nVt0O
iqT+fqf07FerodWVPHzMI8lhiP4LdRNjyHuJdMmLRtK2p/VjTylboV/MsY1C
1RH06cuQopslDtjfPFzo+vwIGrjO0O5SnQssZfrWTtoYTsv7m5r6OrgjcGHq
Ebe/YfTuX9PWlBue2G/iPGesWRh5WEytfD3QBzp9Cx/22RRKyV2qpSPF/CC6
tV3Yoi2ErjSfDhvz2R8jL00QvzMthKortXWrdwdiWo7GrBaXYHreITSgdGIw
hHdbLRFXCqI7ooOaje8Fo+P97D0BVQE043dziFN8CF5LW3+UmOBP023zrv4c
05PT9paNUrm+dEj5lcGSbaGQMauPMfntTUctz94fOzUMGoOqk5UDvKh7S2p8
aGkYomIWF5n3vB/dE6ykRgqFI6u/vFyrqTs19Pc+vN05HKs9Oq6Nr3elRmUP
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
RlNS2JqsuJpSlJWN2i32Jpy2BW+LSG8qxYc197M2VIVQzP1dtOBnKew114/W
bvWni3ptxvvFy2C5wEA4PsyTQr1kl8jMLsPZyvyz3f2daZqn+tx6xTJ0vZTP
361kRv1zN1xYq1KGb5UbT37YrPR/62JuDcH++9x+MOeB+R6YecDMC+Y+YO4L
Jg8weYHJE0zeYPqAoK+pXF9g+gTTNxgeIMnzEs3xAoYnCHgr5ngDwyOu87yO
4HjFSJ7nyxzP+MnzvoHjHYwPYHxBa2+fwPiGlt4+4mlvX9HW22cY874bcb6z
7wGO60yc+EZiBqJsouIeHqigbzpKfd02eSBGseb39PwKeuor0lYzKRzXKuft
HKJcQdXjEeBbHYfsC/7evmfLqZ2KRuWppeBqH41nrTPKKU/P9s7JB+mQjjr+
0CR8HV2f6JIeKrUKerZXDk7bW0ZvpX61jJ2ei3WJzbNrm0tphPOO3btercGN
BllL+z8ltOTW2L4Wh/OwOusV3owpoXtL5J+NfpKPj2cbtqycXUzWeheLm3t+
HiicD22tVyoij45v2afbCqFWl/DfXK1C2rBEtrr8chEMDQdZ1BkXUNbiiRkT
S4th1vDx00LbfJI0jvWuNy+B1SMfRz23PHo1+YHbF6FS3JlnF/ij5+8bjdLV
A+9vKsXmi2VJ6p25dFjT+FGSTBn2iQ2r+tfzfixqdgpr318GD/E7wTljV1Fo
sL3Vu5nrcPkcXkxdkElZU7ZG6xWswxOFrW3tuun0RHNj+L6P63C4c4xep1cq
Pd+il1unVY5NeUt+T8lMppIx8o4P88tx2zJsV5dxIiWfkvUqvlOOUwv73ikt
jaUMNBvqDa1AeuOmHR3Po+j2pR99jZdVQO/g5BGZMuFkMmNMTbtbBfTrL7X8
TAym6e9XBlukVvT8PFY9un6HD71LTxlzurwC635aj+xr5Erjt9Rmae2pQMuO
tf+WfrOgfwaWMiIHKpBz8l3DIy3l/1t3c2sw+8Gch2n89xy474GZB438vBrc
vGDuA+a+YPIAkxeYPMHkDaYPKPJ9uXB9gekTTN8Q8HCT4wHjeV5sOF6QyfNk
zvGEjTxvBhxvYHiEVW9e8YDn+T3HM5R43tdwvGMo70MD5wPaeF8qOF/A+IRs
3rfZnG943dtH1PX2FQ96+4y3vX1HpF6v9wBVpjey3yyZhQ3978+Zv30THTdN
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
Xv0840qT4G3n4AsTSIsk1p+JynjXKRDdscli9AotunXhumFWZR8c9RukpGCk
Rer/hrgZRA1GxdaRoh7HNelOm6hLfz1pfP15R+nuKE2SfLgzRiOu+3fXyns/
wiZr0O6tftJvfOWgeLZ0WtIZdYrL6xR920sRlgZbEpZ1qNHtJfOWpeSNRIHp
cbUyNTUK/Pkm3eKcEt6Jfdrc31eV7D3k5eK6f48ujb47ZPKUMdRn6ZbQeQ2j
cX3vljeR61Xou9a/Fu/TKghaqjfn1YnRdHrjPenxBWNg72Vs+fW+Mu27OWSc
M1QxN/vprbSXSnQgXH+VeasqYs30n00aNYoMTxYPyFykhrMn9Z7fCB1Bh0et
1OuQVYd3y9tPsmsV6M+KhacurFdHmZS9aNVtOWrumpG8c7AGLNzftY2SHE7/
ulzCk3I1oDX1UHu0jywNr53odqBeA4VNhbKbi4bSdsc18VL6mjjfXyq66cEQ
evvqRv/hMzVxpSMnXXWEFJ3oOO5sSppofiaybefVQXTYaLb8nd+a0PXxerkx
UpwEHWobHPS1cLz3ho4n7X0obMfeZ/fDtXDRzPWd1ApRWj4hr7lmlhbmBS0s
2Rv0rzImV26UZ6kWxrrMqMpe86OyqcB55PIKLYSvqJUsuf+5cpv4jfd7LmjB
VjCUogxeVsom5sZVXO7+d53rT+rfXf//dRW3FjD7Bcx5AuZ7AuF9pnD3ETD3
BTMPKvh5jbh5weSBd3xel7i8wOQJJm908X1ocH2ghe/LhOsLwj4PcX2C6RtC
Hk5zPKCM5yWB4wUMTzjVkzcwPILhFQ48z4Ucz/DneX/P8Q7GB6TwvphzvoDx
CYxvYHyEMe/rIc5XPOzpM76v6+E7PvZ8D5CYZTp2jkmTIKXuRMeNDD0yaKxY
bxTxV3BgtsE4SXM92lZeWt5l2R8d5v2vbr+tS6vmL/42Z7YUZEM/6Pxy1KUB
MWYeKJDBoqduevEbdShZ/227m6kcjl07XDT9kTbFx7zPmrJOEdnwyysQ06bP
v9dcczo0Cm5HJ+seHa1Fn9Z3mDVXKYPOfRsRZqpJ5+cqFldLqiDUJVhvlL0G
nTu5XeYuun8fjwo4NdJVnT5v/xEXFaqKgbm3/MTGqZH1i+q5M0PVIKOueEvZ
TZWGSv28MMRRHYMTrtbNdu7+vXLxQH2dvAbEjyYd+2SvQu4jFutaPtNA7D+T
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
fyBVY2FN65u+73B5YwWRkoymM58tafnuV5/dhtvAXTryP+y2oN3D37xI07OF
U+m7XxPCzUlkuENLuY4dHBfly4+S6P4vUXF3Y+NQAfqKiD79etGEjCYYqK97
I8CKH6c3jJ9qTBff+gwaEwhMelTfVa9jRFEp7v+VlHXnNrAhe16zAT14tXhZ
dSdwc1ilu4KpPlV8XGOk5GCPrviKJaP26pKZcvNQ5Xn2sLZZU6E8Sps+TyFl
nbP2qHHp3zV8vQbZ7bvRuOGDPdQ/I/6ttBqdSZuUcELeAb5dr5STi1RoztoT
VjUCB3wcMed5qLQy3UwzVugV64A5vzfa/NFWpLaLTQXrpnf/e+SVdcNMh9Gn
0SKB5SsdEBK+9V+0wxA6rNQhl7jVAS9epzYE7OxPtW0XZtzZ5wAvN4VK6ZV/
K8siHCb3PuQAzZVNgvNHW9i1QLg/m9svYM4D8z0w9wFzXzDzgJkXTB4Q5lXF
5QUmTzB5Q9jHVa4PRPN9hXN9gfg+c7g+Ycj3vYrrGwwP6BrG8eLM8YK9PE+O
HE9Y0ZM3lPA8dm38H494zPMayfEKMZ5nM45nMLyjnfdhM+cDdHlfgjlf4NXT
J1j39A0fe/qIxz19xd2ePuNJT9/Z9wAWbbZ43/FCsE1vVLJ2qDO5dx5XFCsd
gtInGfenWTvTzs/mCrcalDD5kMKtsp9ONOpe5J/+uer4IRs18c96J/ouWRVZ
NE0XG63q3n5UciI9wZK5Nr8N4Pev8GRFsSP9+m2pOW+2MfqvuXM4+q8DhXsv
b5p50xS2IT/8bbvfm4f563PPvzPHsnvShq8O2pPOBdkLefXdf/dYxUgn/wWV
9S26XrjZGlUyLVvjXUHr5nzwmWhji+evWoo9RwjIc/o9C99TdsgTtXXP3GVL
9RUa1mIDgKz3/8ZV6djQtYH9dkjtA5TO1potq7Ci7VbTMdXKHn8Cc1uqTCyp
pnp+iHWlPTpsF/uNOW1O39blRHlYOGDi2sHvrezMaM7q9g25ux1gE/VpftYl
E5p85uGCWQMc4TFu2v6BnsYU7lj9TSzJET7Ky2dZPTCkm1M6em8+4YhFV4dO
Hxbb/X5Yzqyu7XLEhLtym3wf61HZlm+n+9o7wemL8pCH37Sp9s05i4rpTnj9
0cFrs6wmfZyza+bocid8ORUZNdlCja57vCzbXe8Ex4s6DxWiVej0luUH5/x1
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
tkEPkoct0kWbrejXkBDL+UMMsbzrgf7BUVY0/vqv9x8ijdDngm5j4iZLyly3
/lPke2MMOFzvcNjEgjT/Xqh47WWCQNvCzLgwc/rUPsLY2NUUoYZOLS/KzKh+
63u5S/pm8FkxabX9XVNaXrBVJnNFj9+1i0+qfTah6oFPzqb+MkefoZDcNMyE
Yn2vyE3KtoBi9hbnZGVj+pBv+kJluyVUz4WqvfAxogrFS7IGDyzh7FG4te9F
Q1o/VEton7YVLj251WDe834cH+zq+KfFCm8pSjlYTo/6XMi5PW+LNeIGhu0J
t9Chrdtd9cOzrPE2TGZqQvERMtu6vk+LkA3yF6SdOftVmxy1lT2dFG1wo+Oe
cqucFi2MnpsnGm4Dg/yvr152qdMn4YVbW5psIG04elaD50Ga7jTbW0nUFhdW
qtwWH69CZttM+55fYos1vn83GuTtoaGHjT2OHLDFW5uuZZVeu6jD9PQTC0tb
xHRv2TOgcgv1vWJ8TMrXFl+Lnfo0fAQldZ3wsIuyBf2xejp9jyxNktv7Nj3R
FvKr575uFpf837pp1f+twewHcx6Y+8DUA6ZeCPqp4voB0y+YeYCZF5h5gpk3
mDzA5AVBnvVcnmDyxkeeBxWOB8TxvChwvEDA078h/8cT5HneNnC8geERDK9g
eAbDOyR7+4AfvC/ynC9gfMK33r5Bn/dxBOcjGF/B+AzGd6iP6PUe4NaH5qvO
naJIl6zs0N5iT6lL9ktItG8GvlpNyplmT2lGXr8lt+1DTPy/nOJrdnTMNMxe
ac8hDD94s+3nFjuKiJW6GrLzCPbOHr4+KvUUDbmz95voeD10rsxou/XyJDVL
bh0UH2yIOumMBu2xJ+nuUq2W8bXHkejqfLhFzpa6fniN09tngsVTmnXv77Ch
2FVP5eqze+b6X8nBtQetKW/euUeq7WY4WdC2SkXTilbtahfx7fk9+Lwyce0b
LUuSX9pnmbeoJWZ9ahc+pmlBx+K22+36YYmbJWvffFEzp2PD915PbLJCjrTK
Pp39ZmS1Xnjf2BhrbCxvfnNsjyldctlwceIeG7RW5mr47jShyreH5v/5aYMR
MruMdgQb03yvquq7gbaoFbJQGuBrROlJoX1zJU7C64XGlnx3Q+r38fJr3YiT
WOqi3eTgok+zl980vC16CjWpOrVxzrr00S+sPd3oFBo78gPHuh6lvuft5ztf
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
Iubvhjn3S4G3XlHetFcx9OfgpPgv4SmIf6zo3NLzfZPjdEVBWyoVo/YtGaCS
GEkqmXfySyJSoazucGtIz/sReWPuixqRNHjblKrs0gijkyMn91lxLA33Hp8I
31UTQl8aPk+6fikNP5ZuPS49JZiWSc7U6T82HSvndr590/O9smvKoChdzXR4
3B5TL9lymmQix2YcTkhH1fVixz9ZPqTu59uh2pyOk/3aGjc5eNLhiSfmpopm
oOl2pUrePjeqdr3zn8eiDAxyCq5+vNCZkvukaazdk4Ff//bmdo+zo6Yjr7X+
GWUgvKCxaOM9S5o3tX/TO6cMrHuhM/PU/BOk97w9cJZ/Bs7od+waUHyYxFfV
F54PzcDNAcl/rN9tZddg9oM5D8x9YOpBDV9vf65eCPpp5vqBoF8Lrl8I5lHG
zQPMvMDME8y8weSBCD4vXy4vMHkil897KJc3BDwkcjxAlOfFk+MFAp6mczwh
mudNn+MN9jyP/hyPSOR5fcvximae558cz7jE876X4x19eR82cj6A8QWMT2B8
A+MjZHhfozhfwfgMxnf2PUDtgchnM82W4sa48feaP2bTxY0j25eJWvb8DgQ6
jLyZTc+2aYvrB7vCLPVq3WaHbBq/2cJLod0Xr+Y6+A4QySbh5McSQbVBcDp4
d2z1iSxqfjveI2ZtGGAuunPYhUy6drBZbKdZJLx/znTZ3DeTPI6Zpj/W7Hln
K7+vjJLNoNeauxbNGNbj/6+MCHX1dMp1GCC+Zl0iYmTVQpfZpZHZvzW+L7R6
/r6ctOQGwlOpdOXXiM09vwd97yien56bQjpqwdMOH0xBdEzCcJnzyTRb4vfA
QctScbcyQdXkZhLdXH59/JN/qUhbqLEp70ki9ZPaJqFWnoajKksdhj9NoG93
p+Zd00pH7piaf596vm/cpNd8Uf2Vjjzj63Znp8RS2+JJr8Z6ZCB7euKP9p73
o1VtxomP/TMhO0n10G29SMrzTRh5zjoT6t57xGtPh9MYbzfrBY8z4TP3zdjG
0lCK+TzN58fKLEQPrWsXfhJM4U339TP8s5Dore17eEgQvb/2Xex8cxaK9ef9
SLD0p/qFA1rzx2bj74UsNY17PmSQNulM865snIs/U5WzwpNaHAPn+9lnw/Rk
ZY10sisp/2n3FkvNhsrsoBXGQ5wooL+mcuKFbFS8yAkQ+mxDG9Rei+m0ZGPV
+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
/TemrZTOrS09luxYCsnt7rUqd0roiWVSfYNFGd6Xdg8efr2YrvjKi43YdxaT
5UPUs6iIxj7+embg1HKsdZqgcK+0kAatVQhc+LAcJoGmnhNyCqh7wOy5NzzP
YcrEr+W1686Qx5vr60ZOq0Bj+vF1LT3vx+eB99b1LajA/N2rGp5L5dC4eZZ7
fBdWwvnhfLU5w7NI583DoY7JlVhVYn+6vm8GDZl+9034wCq0bBk27+bPVLIW
fnnYSqcKs02vJch/SqZna8ddzi2rAhVkRL9/k0iBB8s7yv5U4feyCXMjb8VR
3LQE0z4rqzFN8z+fbTeiCMEpy54bV0N7v8NGj5thdGBhwLiiqGpoyY+ff+9O
EH05gQ9pldVwSdBKPn7Wl3R/T1j6+U41QkW6SlZedaVTx3QDK59Xo6O9yv1t
pTUddrNdLvG+GnFi54dmpmiyazD7wZwH5j4I6jnI1QNBvapcvWD6QRDf7xeu
X7Tz86ji5gFmXmDmCWbeGMvn4cblAUFei7i84M7n2cTlid983jO4vMHwgHE8
L2s4XsDwBIY3VPA8SnA8Ip/n1ZvjFQzPSOd5P87xDiXehwTOB4jyvrzlfMFC
3icPzifk8r45cb6hkvfRkPMRi3lfh3K+gvEZ1r19R61pr/cAIqlhM6UWKyDE
+nPds3G1dMB7g6NsgQ8OC8fvGNu/lixdlGrXNEdCSavy7YKbRHmXSltyipIw
LElW+okr0dJNun/VvNOxpPKEsON0olHFKUcn/cxG1PXzcn5G52lOQ/0OiJ5B
lqL+kym2NfRj2MTnezQLsWrWrWmjLapp1Nr4ky0jixF1Y5NkgnYVVZhVLIpN
KoHbpbJ9kzZVkpXxaePyYT1/n96YuGTtlJ6/b1Ydtu2rcRZ5qlcrJH6W07Ir
jVMGBpRjoeudLrXrZynDSMVYIuMc9t81cFeKLaOhk9/lbs2ogOJq0cN9jEqp
/zQ5/xNBlTDQDtous7KEZv9rGSmvVwXXO08lnAcVk/4j67lTpavhcbjuu2Zr
ISXK2f92aKvG4mzptKk978eihefKHexqcPD1yt8iv/Ip9ETtrIXDzsPg0psj
iom5dLH1TLlj0Hn45ARpKGzLJtfdD6Yn96Oe789GZ5FvGZRi9fea5HKC5mX9
bSdT0mhKUlyOg26P9t8D5E/vTel5DwxGjAzo+ffFl3aNHZBE5g4j7EcVEXzc
34ZfPRVHlVefHDp7g1CcOHKk6ZtImle9JmnOK0JHbFd9zKFQSro1fo7/b4Ln
rsXHDbICqEZkqrzQoFrcWaGWsTLag/qfWE4Ro2qxd/vlxqsTTtEj1w0hmuNq
0ayYeH/7yMPsGoL9Mtx+MOdBcF8kdx8E9Tzk6gFTL5h+wPQLZh5g5gU3fp7e
3DwhmLc/N28I8tDh8gCTFxL4PJdwecKAz9uNyxtzeB5cOB7Qj+fFkOMFw3rz
hCyeNxWONyzleVzE8YgtPK/5HK9geEZlb94xmvchkvMBX3hf1nC+gPEJ4rxv
kZxvkOntI0p7+wrGZ2zhfT/C+Y72pF7vAea7z8izG74bekOVd770vEizF3xd
UGjnD5f5+lIzTS7Si+kTGoy0YrF+2ZKNrbIXacPq2ufBcqlIvJ3wPP/hBRJb
+iAjtCYL8icNpStMLpDFufKsR435KIyIvnbzcy25pk5J+lpeiOY7Dkn1ej3v
zcXLNRr3i7Fw/yS9vCaiR8kht55dLcWM1aaKnUuJvmw9tVM/6Cx8B6bU3515
nmz/PZOwlzkHvQm4YtBSTTKbzCPUe34PnBbnuXS5V9Ht1llXPw+tgt5E1bxj
CyppWfjfoqc7e9694hS7NXfO0Y+yuZM8zWpg8tV1QqxNOdVkH7fo63AeFr5v
/hpOOEu2cyzmSskTFEfueaFKpSSza+9Pk0zCzkHLVD8cLSEJ57aXNUNrcVJf
a5hXz/uRddNwTolBLR7MUcnUKyykSA3Lps6qWngM9JI7d7CAtG+EpL0RvYA5
TcM2zxHNp3Hq49MXKlxAo9we1/6HcmjCj5unpnhewK8qxdO/z2aS1fOc7IlV
FxB25PzWT6PTadMTsWSbzgu4nTKwT7lFCpkt2ZxhOfIi2uKXRI5uTqS5gf3j
lWQvQuVekpGLdSwFBUoVrVG8iB1enh2PNkZQ00G7Dh3dizhz5IZ66Jhg+i2a
aP/S6iIejNNOeHDLm2YELtNrc76IWWMaHC/8dCB77XnGSp4XITWxquVG6lF2
DWY/BOd95M6D4L507j4w9YCpF0w/YPoFMw8I5vWdmxfG8/O8ys0TzLwRxefh
xuUBJi9I8nnacHmCyRsMDzjP82LO8YLvPE9mHE+Q680bGB4h25tXWPE863M8
4xPP+2mOdzzhfZjG+QDGFzA+wZ73rYDzDYyPYHwF4zN29/adfQ/w/wBzk7hD

     "], {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 
        4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 
        4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 
        4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 
        4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 
        4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 
        4356}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 
        4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 
        4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 
        4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 
        4400, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 
        4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 
        4422}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 
        4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 
        4444, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 
        4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 
        4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 
        4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 
        4488}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 
        4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 
        4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 
        4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 
        4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 
        4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 
        4554}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 
        4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 
        4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 
        4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597, 
        4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 
        4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4618, 4619, 
        4620}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 
        4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4640, 4641, 
        4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 
        4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 
        4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 
        4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 
        4686}]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 
        4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704, 4705, 4706, 4707, 
        4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 
        4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 
        4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 
        4741, 4742, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4750, 4751, 
        4752}]}, 
      {RGBColor[1, 0.75, 0], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 
        4763, 4764, 4765, 4766, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 
        4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 
        4785, 4786, 4787, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 
        4796, 4797, 4798, 4799, 4800, 4801, 4802, 4803, 4804, 4805, 4806, 
        4807, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 
        4818}]}, 
      {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.006944444444444445],
        AbsoluteThickness[1.6], 
       PointBox[{4819, 4820, 4821, 4822, 4823, 4824, 4825, 4826, 4827, 4828, 
        4829, 4830, 4831, 4832, 4833, 4834, 4835, 4836, 4837, 4838, 4839, 
        4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 
        4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 
        4862, 4863, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4872, 
        4873, 4874, 4875, 4876, 4877, 4878, 4879, 4880, 4881, 4882, 4883, 
        4884}]}, 
      {RGBColor[0.571589, 0.586483, 0.], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 4894, 
        4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4904, 4905, 
        4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4915, 4916, 
        4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 
        4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 
        4939, 4940, 4941, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 
        4950}]}, 
      {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{4951, 4952, 4953, 4954, 4955, 4956, 4957, 4958, 4959, 4960, 
        4961, 4962, 4963, 4964, 4965, 4966, 4967, 4968, 4969, 4970, 4971, 
        4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 4981, 4982, 
        4983, 4984, 4985, 4986, 4987, 4988, 4989, 4990, 4991, 4992, 4993, 
        4994, 4995, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 5004, 
        5005, 5006, 5007, 5008, 5009, 5010, 5011, 5012, 5013, 5014, 5015, 
        5016}]}, 
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5017, 5018, 5019, 5020, 5021, 5022, 5023, 5024, 5025, 5026, 
        5027, 5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 
        5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 
        5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 
        5060, 5061, 5062, 5063, 5064, 5065, 5066, 5067, 5068, 5069, 5070, 
        5071, 5072, 5073, 5074, 5075, 5076, 5077, 5078, 5079, 5080, 5081, 
        5082}]}, 
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5083, 5084, 5085, 5086, 5087, 5088, 5089, 5090, 5091, 5092, 
        5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 5102, 5103, 
        5104, 5105, 5106, 5107, 5108, 5109, 5110, 5111, 5112, 5113, 5114, 
        5115, 5116, 5117, 5118, 5119, 5120, 5121, 5122, 5123, 5124, 5125, 
        5126, 5127, 5128, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 
        5137, 5138, 5139, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5147, 
        5148}]}, 
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5149, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5157, 5158, 
        5159, 5160, 5161, 5162, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 
        5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 
        5181, 5182, 5183, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 
        5192, 5193, 5194, 5195, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 
        5203, 5204, 5205, 5206, 5207, 5208, 5209, 5210, 5211, 5212, 5213, 
        5214}]}, 
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 
        5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 
        5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 5245, 5246, 
        5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 
        5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 
        5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 
        5280}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 
        5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 
        5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 
        5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 
        5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 
        5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 
        5346}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5347, 5348, 5349, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 
        5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 
        5368, 5369, 5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 
        5379, 5380, 5381, 5382, 5383, 5384, 5385, 5386, 5387, 5388, 5389, 
        5390, 5391, 5392, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 
        5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 
        5412}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5422, 
        5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433, 
        5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 
        5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454, 5455, 
        5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465, 5466, 
        5467, 5468, 5469, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 
        5478}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, 
        5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 
        5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507, 5508, 5509, 5510, 
        5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 
        5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5530, 5531, 5532, 
        5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 
        5544}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5545, 5546, 5547, 5548, 5549, 5550, 5551, 5552, 5553, 5554, 
        5555, 5556, 5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5565, 
        5566, 5567, 5568, 5569, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 
        5577, 5578, 5579, 5580, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 
        5588, 5589, 5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 
        5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 
        5610}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5611, 5612, 5613, 5614, 5615, 5616, 5617, 5618, 5619, 5620, 
        5621, 5622, 5623, 5624, 5625, 5626, 5627, 5628, 5629, 5630, 5631, 
        5632, 5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 5642, 
        5643, 5644, 5645, 5646, 5647, 5648, 5649, 5650, 5651, 5652, 5653, 
        5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, 
        5665, 5666, 5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 
        5676}]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{5677, 5678, 5679, 5680, 5681, 5682, 5683, 5684, 5685, 5686, 
        5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696, 5697, 
        5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 
        5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 
        5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728, 5729, 5730, 
        5731, 5732, 5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 5741, 
        5742}]}, 
      {RGBColor[1, 0.75, 0], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{5743, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 
        5753, 5754, 5755, 5756, 5757, 5758, 5759, 5760, 5761, 5762, 5763, 
        5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 
        5775, 5776, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 
        5786, 5787, 5788, 5789, 5790, 5791, 5792, 5793, 5794, 5795, 5796, 
        5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 
        5808}]}, 
      {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.006944444444444445],
        AbsoluteThickness[1.6], 
       PointBox[{5809, 5810, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 
        5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5827, 5828, 5829, 
        5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5839, 5840, 
        5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5851, 
        5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862, 
        5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872, 5873, 
        5874}]}, 
      {RGBColor[0.571589, 0.586483, 0.], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{5875, 5876, 5877, 5878, 5879, 5880, 5881, 5882, 5883, 5884, 
        5885, 5886, 5887, 5888, 5889, 5890, 5891, 5892, 5893, 5894, 5895, 
        5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903, 5904, 5905, 5906, 
        5907, 5908, 5909, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 
        5918, 5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 
        5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5938, 5939, 
        5940}]}, 
      {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 5950, 
        5951, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 5961, 
        5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 5970, 5971, 5972, 
        5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 5981, 5982, 5983, 
        5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 
        5995, 5996, 5997, 5998, 5999, 6000, 6001, 6002, 6003, 6004, 6005, 
        6006}]}, 
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6007, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016, 
        6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 
        6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036, 6037, 6038, 
        6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 
        6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 
        6061, 6062, 6063, 6064, 6065, 6066, 6067, 6068, 6069, 6070, 6071, 
        6072}]}, 
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 
        6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 
        6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 6102, 6103, 6104, 
        6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 6115, 
        6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 
        6127, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 
        6138}]}, 
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6139, 6140, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6148, 
        6149, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 
        6160, 6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6170, 
        6171, 6172, 6173, 6174, 6175, 6176, 6177, 6178, 6179, 6180, 6181, 
        6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 
        6193, 6194, 6195, 6196, 6197, 6198, 6199, 6200, 6201, 6202, 6203, 
        6204}]}, 
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6213, 6214, 
        6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 
        6226, 6227, 6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236, 
        6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 
        6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 
        6259, 6260, 6261, 6262, 6263, 6264, 6265, 6266, 6267, 6268, 6269, 
        6270}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6271, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 
        6281, 6282, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 
        6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 
        6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6313, 
        6314, 6315, 6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 
        6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 
        6336}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6337, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 
        6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 
        6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 
        6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 
        6380, 6381, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6390, 
        6391, 6392, 6393, 6394, 6395, 6396, 6397, 6398, 6399, 6400, 6401, 
        6402}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6412, 
        6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 6423, 
        6424, 6425, 6426, 6427, 6428, 6429, 6430, 6431, 6432, 6433, 6434, 
        6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6444, 6445, 
        6446, 6447, 6448, 6449, 6450, 6451, 6452, 6453, 6454, 6455, 6456, 
        6457, 6458, 6459, 6460, 6461, 6462, 6463, 6464, 6465, 6466, 6467, 
        6468}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6469, 6470, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 
        6479, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6488, 6489, 
        6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 6498, 6499, 6500, 
        6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6510, 6511, 
        6512, 6513, 6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6522, 
        6523, 6524, 6525, 6526, 6527, 6528, 6529, 6530, 6531, 6532, 6533, 
        6534}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 
        6545, 6546, 6547, 6548, 6549, 6550, 6551, 6552, 6553, 6554, 6555, 
        6556, 6557, 6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 
        6567, 6568, 6569, 6570, 6571, 6572, 6573, 6574, 6575, 6576, 6577, 
        6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 
        6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 
        6600}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6601, 6602, 6603, 6604, 6605, 6606, 6607, 6608, 6609, 6610, 
        6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6619, 6620, 6621, 
        6622, 6623, 6624, 6625, 6626, 6627, 6628, 6629, 6630, 6631, 6632, 
        6633, 6634, 6635, 6636, 6637, 6638, 6639, 6640, 6641, 6642, 6643, 
        6644, 6645, 6646, 6647, 6648, 6649, 6650, 6651, 6652, 6653, 6654, 
        6655, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 
        6666}]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 
        6677, 6678, 6679, 6680, 6681, 6682, 6683, 6684, 6685, 6686, 6687, 
        6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 
        6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 
        6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 
        6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 
        6732}]}, 
      {RGBColor[1, 0.75, 0], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 
        6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 
        6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 
        6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 
        6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 
        6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 
        6798}]}, 
      {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.006944444444444445],
        AbsoluteThickness[1.6], 
       PointBox[{6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 
        6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 
        6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 
        6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 
        6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 
        6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 
        6864}]}, 
      {RGBColor[0.571589, 0.586483, 0.], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 
        6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 
        6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 
        6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 
        6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917, 6918, 
        6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 
        6930}]}, 
      {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 
        6941, 6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 
        6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 
        6963, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 
        6974, 6975, 6976, 6977, 6978, 6979, 6980, 6981, 6982, 6983, 6984, 
        6985, 6986, 6987, 6988, 6989, 6990, 6991, 6992, 6993, 6994, 6995, 
        6996}]}, 
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{6997, 6998, 6999, 7000, 7001, 7002, 7003, 7004, 7005, 7006, 
        7007, 7008, 7009, 7010, 7011, 7012, 7013, 7014, 7015, 7016, 7017, 
        7018, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 7028, 
        7029, 7030, 7031, 7032, 7033, 7034, 7035, 7036, 7037, 7038, 7039, 
        7040, 7041, 7042, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 
        7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 
        7062}]}, 
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 
        7073, 7074, 7075, 7076, 7077, 7078, 7079, 7080, 7081, 7082, 7083, 
        7084, 7085, 7086, 7087, 7088, 7089, 7090, 7091, 7092, 7093, 7094, 
        7095, 7096, 7097, 7098, 7099, 7100, 7101, 7102, 7103, 7104, 7105, 
        7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 
        7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 7126, 7127, 
        7128}]}, 
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 
        7139, 7140, 7141, 7142, 7143, 7144, 7145, 7146, 7147, 7148, 7149, 
        7150, 7151, 7152, 7153, 7154, 7155, 7156, 7157, 7158, 7159, 7160, 
        7161, 7162, 7163, 7164, 7165, 7166, 7167, 7168, 7169, 7170, 7171, 
        7172, 7173, 7174, 7175, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 
        7183, 7184, 7185, 7186, 7187, 7188, 7189, 7190, 7191, 7192, 7193, 
        7194}]}, 
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7195, 7196, 7197, 7198, 7199, 7200, 7201, 7202, 7203, 7204, 
        7205, 7206, 7207, 7208, 7209, 7210, 7211, 7212, 7213, 7214, 7215, 
        7216, 7217, 7218, 7219, 7220, 7221, 7222, 7223, 7224, 7225, 7226, 
        7227, 7228, 7229, 7230, 7231, 7232, 7233, 7234, 7235, 7236, 7237, 
        7238, 7239, 7240, 7241, 7242, 7243, 7244, 7245, 7246, 7247, 7248, 
        7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 7258, 7259, 
        7260}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7261, 7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 
        7271, 7272, 7273, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 
        7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 
        7293, 7294, 7295, 7296, 7297, 7298, 7299, 7300, 7301, 7302, 7303, 
        7304, 7305, 7306, 7307, 7308, 7309, 7310, 7311, 7312, 7313, 7314, 
        7315, 7316, 7317, 7318, 7319, 7320, 7321, 7322, 7323, 7324, 7325, 
        7326}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7327, 7328, 7329, 7330, 7331, 7332, 7333, 7334, 7335, 7336, 
        7337, 7338, 7339, 7340, 7341, 7342, 7343, 7344, 7345, 7346, 7347, 
        7348, 7349, 7350, 7351, 7352, 7353, 7354, 7355, 7356, 7357, 7358, 
        7359, 7360, 7361, 7362, 7363, 7364, 7365, 7366, 7367, 7368, 7369, 
        7370, 7371, 7372, 7373, 7374, 7375, 7376, 7377, 7378, 7379, 7380, 
        7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 
        7392}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7401, 7402, 
        7403, 7404, 7405, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 7413, 
        7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 7424, 
        7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 
        7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 
        7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 
        7458}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 
        7469, 7470, 7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 
        7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 
        7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 
        7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 
        7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 
        7524}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 
        7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 
        7546, 7547, 7548, 7549, 7550, 7551, 7552, 7553, 7554, 7555, 7556, 
        7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, 
        7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 
        7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 7589, 
        7590}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7600, 
        7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 
        7612, 7613, 7614, 7615, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 
        7623, 7624, 7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 
        7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 
        7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 
        7656}]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7657, 7658, 7659, 7660, 7661, 7662, 7663, 7664, 7665, 7666, 
        7667, 7668, 7669, 7670, 7671, 7672, 7673, 7674, 7675, 7676, 7677, 
        7678, 7679, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 
        7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 
        7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 
        7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 
        7722}]}, 
      {RGBColor[1, 0.75, 0], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 
        7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 
        7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7752, 7753, 7754, 
        7755, 7756, 7757, 7758, 7759, 7760, 7761, 7762, 7763, 7764, 7765, 
        7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 
        7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 
        7788}]}, 
      {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.006944444444444445],
        AbsoluteThickness[1.6], 
       PointBox[{7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 7798, 
        7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 7809, 
        7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 
        7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 
        7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 
        7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 
        7854}]}, 
      {RGBColor[0.571589, 0.586483, 0.], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 
        7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 
        7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 
        7887, 7888, 7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 
        7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 
        7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 
        7920}]}, 
      {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       PointBox[{7921, 7922, 7923, 7924, 7925, 7926, 7927, 7928, 7929, 7930, 
        7931, 7932, 7933, 7934, 7935, 7936, 7937, 7938, 7939, 7940, 7941, 
        7942, 7943, 7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 
        7953, 7954, 7955, 7956, 7957, 7958, 7959, 7960, 7961, 7962, 7963, 
        7964, 7965, 7966, 7967, 7968, 7969, 7970, 7971, 7972, 7973, 7974, 
        7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, 7984, 7985, 
        7986}]}, 
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 
        7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 
        8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, 8016, 8017, 8018, 
        8019, 8020, 8021, 8022, 8023, 8024, 8025, 8026, 8027, 8028, 8029, 
        8030, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 
        8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 
        8052}]}, 
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8062, 
        8063, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 
        8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 
        8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 
        8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 
        8107, 8108, 8109, 8110, 8111, 8112, 8113, 8114, 8115, 8116, 8117, 
        8118}]}, 
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{8119, 8120, 8121, 8122, 8123, 8124, 8125, 8126, 8127, 8128, 
        8129, 8130, 8131, 8132, 8133, 8134, 8135, 8136, 8137, 8138, 8139, 
        8140, 8141, 8142, 8143, 8144, 8145, 8146, 8147, 8148, 8149, 8150, 
        8151, 8152, 8153, 8154, 8155, 8156, 8157, 8158, 8159, 8160, 8161, 
        8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 
        8173, 8174, 8175, 8176, 8177, 8178, 8179, 8180, 8181, 8182, 8183, 
        8184}]}, 
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{8185, 8186, 8187, 8188, 8189, 8190, 8191, 8192, 8193, 8194, 
        8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 
        8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214, 8215, 8216, 
        8217, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 8227, 
        8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235, 8236, 8237, 8238, 
        8239, 8240, 8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248, 8249, 
        8250}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{8251, 8252, 8253, 8254, 8255, 8256, 8257, 8258, 8259, 8260, 
        8261, 8262, 8263, 8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271, 
        8272, 8273, 8274, 8275, 8276, 8277, 8278, 8279, 8280, 8281, 8282, 
        8283, 8284, 8285, 8286, 8287, 8288, 8289, 8290, 8291, 8292, 8293, 
        8294, 8295, 8296, 8297, 8298, 8299, 8300, 8301, 8302, 8303, 8304, 
        8305, 8306, 8307, 8308, 8309, 8310, 8311, 8312, 8313, 8314, 8315, 
        8316}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{8317, 8318, 8319, 8320, 8321, 8322, 8323, 8324, 8325, 8326, 
        8327, 8328, 8329, 8330, 8331, 8332, 8333, 8334, 8335, 8336, 8337, 
        8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 
        8349, 8350, 8351, 8352, 8353, 8354, 8355, 8356, 8357, 8358, 8359, 
        8360, 8361, 8362, 8363, 8364, 8365, 8366, 8367, 8368, 8369, 8370, 
        8371, 8372, 8373, 8374, 8375, 8376, 8377, 8378, 8379, 8380, 8381, 
        8382}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{8383, 8384, 8385, 8386, 8387, 8388, 8389, 8390, 8391, 8392, 
        8393, 8394, 8395, 8396, 8397, 8398, 8399, 8400, 8401, 8402, 8403, 
        8404, 8405, 8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 
        8415, 8416, 8417, 8418, 8419, 8420, 8421, 8422, 8423, 8424, 8425, 
        8426, 8427, 8428, 8429, 8430, 8431, 8432, 8433, 8434, 8435, 8436, 
        8437, 8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 8446, 8447, 
        8448}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{8449, 8450, 8451, 8452, 8453, 8454, 8455, 8456, 8457, 8458, 
        8459, 8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8468, 8469, 
        8470, 8471, 8472, 8473, 8474, 8475, 8476, 8477, 8478, 8479, 8480, 
        8481, 8482, 8483, 8484, 8485, 8486, 8487, 8488, 8489, 8490, 8491, 
        8492, 8493, 8494, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 
        8503, 8504, 8505, 8506, 8507, 8508, 8509, 8510, 8511, 8512, 8513, 
        8514}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], 
       PointBox[{8515, 8516, 8517, 8518, 8519, 8520, 8521, 8522, 8523, 8524, 
        8525, 8526, 8527, 8528, 8529, 8530, 8531, 8532, 8533, 8534, 8535, 
        8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 
        8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 
        8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 
        8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8579, 
        8580}]}, {}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 50}, {-10, 40}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.569172717853725*^9, 3.5691727503598146`*^9}, {
   3.569172791619978*^9, 3.569172859932878*^9}, {3.569172893223915*^9, 
   3.56917291759487*^9}, {3.569172954823872*^9, 3.569172997733938*^9}, {
   3.5691733317742653`*^9, 3.569173474842066*^9}, 3.569173636072381*^9, 
   3.588603021883752*^9, 3.58860638758186*^9, {3.5886064276183*^9, 
   3.588606479608068*^9}, {3.588606538064467*^9, 3.588606546652938*^9}, 
   3.5886066266622*^9, 3.588606665575532*^9, 3.588608141325379*^9, {
   3.588608301661743*^9, 3.588608330141891*^9}, 3.588608371539714*^9, {
   3.5886084472676153`*^9, 3.588608490368147*^9}, {3.5886088362430973`*^9, 
   3.588608888664679*^9}, 3.5886093334900713`*^9, 3.588609471385528*^9, 
   3.5886265243180227`*^9, {3.606572195055359*^9, 3.606572259726128*^9}, {
   3.606572300618932*^9, 3.606572369761598*^9}, {3.606572441164641*^9, 
   3.606572502429599*^9}, {3.606572580148664*^9, 3.606572622289777*^9}, {
   3.606572654979431*^9, 3.606572663468912*^9}, 3.60657269848374*^9, {
   3.606648801662663*^9, 3.606648871214213*^9}, 3.606648902179103*^9, 
   3.61199435622126*^9, 3.611994402521468*^9, 3.611994438752348*^9, {
   3.611994470315736*^9, 3.611994496334792*^9}, 3.611994537058663*^9, 
   3.611994589845615*^9, 3.611994632757494*^9, 3.6119947564727697`*^9, 
   3.611994803209166*^9, 3.612607670763124*^9, 3.612607735935933*^9, 
   3.613384790990774*^9, {3.613384859422752*^9, 3.613384886392248*^9}, {
   3.6241087497699947`*^9, 3.624108804359194*^9}, {3.6241098161559763`*^9, 
   3.624109826881815*^9}, 3.624110721411261*^9, 3.624110757025393*^9, 
   3.624110798805707*^9, 3.624110890473433*^9, {3.6241109849723454`*^9, 
   3.624111066899272*^9}, {3.6241110990577374`*^9, 3.6241111090370207`*^9}, {
   3.624111162008916*^9, 3.624111184518815*^9}, 3.6241114021145487`*^9, 
   3.624111813901375*^9, {3.6241946079578457`*^9, 3.624194633659371*^9}, 
   3.6241950185742273`*^9, 3.6241982229019413`*^9, {3.62419929582656*^9, 
   3.624199361276087*^9}, {3.624199763087378*^9, 3.6241997752763863`*^9}, {
   3.624199854283017*^9, 3.624199883207857*^9}, {3.624200228165738*^9, 
   3.624200254806246*^9}, {3.62420028763871*^9, 3.624200333788888*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"cx2", "\[IndentingNewLine]", 
 RowBox[{"cx2", "/.", 
  RowBox[{"{", 
   RowBox[{"x1", "->", 
    RowBox[{"Log", "[", 
     RowBox[{"KSx1", "-", "R0"}], "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.62411171603263*^9, 3.624111757243596*^9}, 
   3.624194775650176*^9, {3.624195044675654*^9, 3.6241950466874638`*^9}}],

Cell[BoxData[
 RowBox[{"KSx2", "\[Equal]", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"Cot", "[", 
       FractionBox[
        RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}], " ", 
      RowBox[{"Tan", "[", 
       RowBox[{"H0", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"MY1", "+", 
             RowBox[{
              SuperscriptBox["2", "MP0"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
               
               RowBox[{"-", "MP0"}]]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "x2"}]}], ")"}]}], "+", "x2"}], ")"}]}], 
       "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6241119079676933`*^9, 3.624194672399732*^9, 3.624194776352075*^9, {
   3.6241950208280993`*^9, 3.624195047147834*^9}, 3.624199883270113*^9}],

Cell[BoxData[
 RowBox[{"KSx2", "\[Equal]", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"Cot", "[", 
       FractionBox[
        RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}], " ", 
      RowBox[{"Tan", "[", 
       RowBox[{"H0", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"MY1", "+", 
             RowBox[{
              SuperscriptBox["2", "MP0"], " ", 
              SuperscriptBox["KSx1", 
               RowBox[{"-", "MP0"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "x2"}]}], ")"}]}], "+", "x2"}], ")"}]}], 
       "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6241119079676933`*^9, 3.624194672399732*^9, 3.624194776352075*^9, {
   3.6241950208280993`*^9, 3.624195047147834*^9}, 3.624199883274819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"KSx2", "\[Equal]", " ", 
     RowBox[{"Tan", "[", "x2", "]"}]}], ",", "x2"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.624195349544737*^9, 3.62419541352031*^9}, {
  3.624195460528961*^9, 3.624195466725315*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", 
    RowBox[{"ArcTan", "[", "KSx2", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.624195391721093*^9, 3.624195414066886*^9}, 
   3.6241954674100933`*^9, 3.6241998833184853`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"inverse", " ", "transformation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"subinv", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"icx0", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{"cx0", ",", "x0"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"icx1", "=", 
      RowBox[{"x1", "->", 
       RowBox[{"Log", "[", 
        RowBox[{"KSx1", "-", "R0"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"icx2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"cx2", "/.", "icx1"}], ",", "x2"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], "}"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"icx3", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{"cx3", ",", "x3"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.588608319401375*^9, 3.5886083221713343`*^9}, {
   3.588626563891189*^9, 3.588626600145774*^9}, {3.62411168859374*^9, 
   3.62411168913741*^9}, {3.624111762209653*^9, 3.624111763953699*^9}, {
   3.624194883769774*^9, 3.6241949547832603`*^9}, 3.624195477349306*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x0", "\[Rule]", "KSx0"}], ",", 
   RowBox[{"x1", "\[Rule]", 
    RowBox[{"Log", "[", 
     RowBox[{"KSx1", "-", "R0"}], "]"}]}], ",", 
   RowBox[{"x2", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "H0"}], " ", 
       SuperscriptBox["KSx1", "MP0"], " ", "\[Pi]"}], "-", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"1", "+", "MP0"}]], " ", "H0", " ", "MY1", " ", "\[Pi]"}], 
      "+", 
      RowBox[{"2", " ", "H0", " ", 
       SuperscriptBox["KSx1", "MP0"], " ", "MY1", " ", "\[Pi]"}], "+", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"1", "+", "MP0"}]], " ", "H0", " ", "MY2", " ", "\[Pi]"}], 
      "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["KSx1", "MP0"], " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "KSx2"}], "+", "\[Pi]"}], ")"}], " ", 
          RowBox[{"Tan", "[", 
           FractionBox[
            RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}]}], "\[Pi]"], "]"}]}]}], 
     
     RowBox[{"2", " ", "H0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["KSx1", "MP0"]}], "-", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "+", "MP0"}]], " ", "MY1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["KSx1", "MP0"], " ", "MY1"}], "+", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "+", "MP0"}]], " ", "MY2"}]}], ")"}], " ", 
      "\[Pi]"}]]}], ",", 
   RowBox[{"x3", "\[Rule]", "KSx3"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5886083047188587`*^9, 3.588608375617731*^9, 3.588608920985882*^9, 
   3.588609471895294*^9, 3.5886265268449907`*^9, {3.588626579393642*^9, 
   3.588626600744389*^9}, 3.624111490668212*^9, 3.624111773937134*^9, 
   3.6241118188241673`*^9, 3.624111913635442*^9, 3.6241946811527767`*^9, 
   3.624194824622439*^9, {3.62419494268822*^9, 3.624194974290802*^9}, 
   3.624195050771096*^9, 3.624195478022728*^9, 3.624199883367572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dxdxMKSKS", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx0", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x0"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx0", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x1"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx0", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x2"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx0", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x3"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x0"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x1"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x2"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x3"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x0"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x1"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x2"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x3"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx3", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x0"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx3", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x1"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx3", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x2"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"cx3", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "x3"}], "]"}]}], "}"}]}], 
    "}"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.624196625754521*^9, 3.624196627272811*^9}, {
  3.6241966717380047`*^9, 3.624196678159251*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["\[ExponentialE]", "x1"], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "MP0"}]]}], " ", 
      SuperscriptBox["\[ExponentialE]", "x1"], " ", "H0", " ", "MP0", " ", 
      RowBox[{"(", 
       RowBox[{"MY1", "-", "MY2"}], ")"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "-", "MP0"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x2"}]}], ")"}], " ", 
      RowBox[{"Cot", "[", 
       FractionBox[
        RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", 
        RowBox[{"H0", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"MY1", "+", 
              RowBox[{
               SuperscriptBox["2", "MP0"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
                RowBox[{"-", "MP0"}]]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "x2"}]}], ")"}]}], "+", "x2"}], ")"}]}], 
        "]"}], "2"]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", "H0", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"MY1", "+", 
           RowBox[{
            SuperscriptBox["2", "MP0"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
             RowBox[{"-", "MP0"}]]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Cot", "[", 
       FractionBox[
        RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", 
        RowBox[{"H0", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"MY1", "+", 
              RowBox[{
               SuperscriptBox["2", "MP0"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
                RowBox[{"-", "MP0"}]]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "x2"}]}], ")"}]}], "+", "x2"}], ")"}]}], 
        "]"}], "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.624196459706099*^9, 3.624196628110968*^9, 
  3.6241966792115993`*^9, 3.624199885021247*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "dxdxMKSKS", "]"}]], "Input",
 CellChangeTimes->{{3.569173593552984*^9, 3.569173598729744*^9}, {
  3.6241966815090103`*^9, 3.624196687115246*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0"},
    {"0", 
     SuperscriptBox["\[ExponentialE]", "x1"], "0", "0"},
    {"0", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "MP0"}]]}], " ", 
      SuperscriptBox["\[ExponentialE]", "x1"], " ", "H0", " ", "MP0", " ", 
      RowBox[{"(", 
       RowBox[{"MY1", "-", "MY2"}], ")"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "-", "MP0"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "x2"}]}], ")"}], " ", 
      RowBox[{"Cot", "[", 
       FractionBox[
        RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", 
        RowBox[{"H0", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"MY1", "+", 
              RowBox[{
               SuperscriptBox["2", "MP0"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
                RowBox[{"-", "MP0"}]]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "x2"}]}], ")"}]}], "+", "x2"}], ")"}]}], 
        "]"}], "2"]}], 
     RowBox[{
      FractionBox["1", "2"], " ", "H0", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"MY1", "+", 
           RowBox[{
            SuperscriptBox["2", "MP0"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
             RowBox[{"-", "MP0"}]]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Cot", "[", 
       FractionBox[
        RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", 
        RowBox[{"H0", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"MY1", "+", 
              RowBox[{
               SuperscriptBox["2", "MP0"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", "x1"], "+", "R0"}], ")"}], 
                RowBox[{"-", "MP0"}]]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "x2"}]}], ")"}]}], "+", "x2"}], ")"}]}], 
        "]"}], "2"]}], "0"},
    {"0", "0", "0", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.569173599224453*^9, 3.569173640663301*^9, 
  3.588606665657976*^9, 3.5886072490038147`*^9, 3.588608141472665*^9, 
  3.58860914290416*^9, 3.588609471970017*^9, 3.588626526903607*^9, 
  3.5886266064569683`*^9, 3.624111866881241*^9, 3.624111918945533*^9, 
  3.624112000720888*^9, 3.624196639496129*^9, 3.624196687720148*^9, 
  3.624199885139636*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "no", " ", "coupling", " ", "between", " ", "various", " ", "coordinates", 
    " ", "so", " ", "this", " ", "is", " ", "simple"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dxdxKSMKS", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Inverse", "[", "dxdxMKSKS", "]"}], "/.", "subinv"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", "dxdxKSMKS", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5886069653332567`*^9, 3.58860696947694*^9}, {
  3.588607256301607*^9, 3.58860725777598*^9}, {3.5886265157526217`*^9, 
  3.588626516740038*^9}, {3.624196645769953*^9, 3.624196648585082*^9}, {
  3.6241966922120667`*^9, 3.624196709151167*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0"},
    {"0", 
     FractionBox["1", 
      RowBox[{"KSx1", "-", "R0"}]], "0", "0"},
    {"0", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"1", "+", "MP0"}]], " ", 
        SuperscriptBox["KSx1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "MP0"}]], " ", "MP0", " ", 
        RowBox[{"(", 
         RowBox[{"MY1", "-", "MY2"}], ")"}], " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "KSx2"}], "+", "\[Pi]"}], ")"}], " ", 
           RowBox[{"Tan", "[", 
            FractionBox[
             RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}]}], "\[Pi]"], "]"}]}], 
       RowBox[{"H0", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["KSx1", "MP0"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "MY1"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"1", "+", "MP0"}]], " ", 
            RowBox[{"(", 
             RowBox[{"MY1", "-", "MY2"}], ")"}]}]}], ")"}], "2"], " ", 
        "\[Pi]"}]]}], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["KSx1", "MP0"], " ", 
        RowBox[{"Tan", "[", 
         FractionBox[
          RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}]}], 
       RowBox[{"H0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["KSx1", "MP0"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "MY1"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"1", "+", "MP0"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "MY1"}], "+", "MY2"}], ")"}]}]}], ")"}], " ", 
        SuperscriptBox["\[Pi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "KSx2"}], "+", "\[Pi]"}], ")"}], 
             "2"], " ", 
            SuperscriptBox[
             RowBox[{"Tan", "[", 
              FractionBox[
               RowBox[{"H0", " ", "\[Pi]"}], "2"], "]"}], "2"]}], 
           SuperscriptBox["\[Pi]", "2"]]}], ")"}]}]]}], "0"},
    {"0", "0", "0", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.588606939774288*^9, 3.58860697005514*^9}, {
   3.588607250243495*^9, 3.5886072582981157`*^9}, 3.588608141532241*^9, 
   3.588609177764229*^9, 3.5886092936284447`*^9, 3.588609471985647*^9, 
   3.5886265270246363`*^9, 3.588626676337227*^9, {3.62411198473457*^9, 
   3.6241120090471973`*^9}, 3.624194990812064*^9, 3.6241950627354307`*^9, 
   3.624195093058074*^9, 3.624195485782967*^9, 3.6241966494771013`*^9, {
   3.624196704800169*^9, 3.624196709598201*^9}, 3.6241998860639753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"dxdxKSMKS", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KSx1", "\[Rule]", "3.1"}], ",", 
     RowBox[{"R0", "\[Rule]", "0"}], ",", 
     RowBox[{"KSx2", "\[Rule]", 
      RowBox[{"Pi", "/", "4"}]}], ",", 
     RowBox[{"H0", "\[Rule]", "0.6"}], ",", 
     RowBox[{"MY1", "\[Rule]", "0.001"}], ",", 
     RowBox[{"MY2", "\[Rule]", "0.1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.588632856987246*^9, 3.588632888769638*^9}, {
   3.624112016628862*^9, 3.6241120544396152`*^9}, 3.624195631793599*^9, 
   3.624196714372961*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0"},
    {"0", "0.3225806451612903`", "0", "0"},
    {"0", 
     FractionBox[
      RowBox[{"0.031657447345879754`", " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "+", "MP0"}]], " ", 
       SuperscriptBox["3.1`", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "MP0"}]], " ", "MP0"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.099`"}], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "MP0"}]]}], "+", 
         RowBox[{"0.998`", " ", 
          SuperscriptBox["3.1`", "MP0"]}]}], ")"}], "2"]], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"0.3154542209834783`", " ", 
        SuperscriptBox["3.1`", "MP0"]}], 
       RowBox[{
        RowBox[{"0.099`", " ", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "MP0"}]]}], "-", 
        RowBox[{"0.998`", " ", 
         SuperscriptBox["3.1`", "MP0"]}]}]]}], "0"},
    {"0", "0", "0", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.624195632900942*^9, 3.624196714636951*^9, 
  3.624199886323406*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "done", " ", "with", " ", "dXdX", " ", "arrays", " ", "so", " ", "far"}], 
   " ", "-", " ", 
   RowBox[{"no", " ", "need", " ", "for", " ", "anything", " ", "else"}], " ",
    "-", " ", 
   RowBox[{"use", " ", "METRICNUMERIC"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.624195647509701*^9, 3.624195655618935*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "**", "**", "**", "**", "**", "**", "**", " ", "CForms", " ", "**", "**", "**",
    "**", "**", "**"}], "******)"}]], "Input",
 CellChangeTimes->{{3.5692589331954393`*^9, 3.569258939734939*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"substC", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"\"\<E\>\"", "\[Rule]", "\"\<exp(1.0)\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5693300903060226`*^9, 3.5693300979437857`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coordinate", " ", "transformations", " ", "KS"}], " ", "->", " ",
     "MKS"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"TableForm", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CForm", "[", 
      RowBox[{"subinv", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"\"\<=\>\"", 
      RowBox[{"CForm", "[", 
       RowBox[{"subinv", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"CForm", "[", 
      RowBox[{"subinv", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"\"\<=\>\"", 
      RowBox[{"CForm", "[", 
       RowBox[{"subinv", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"CForm", "[", 
      RowBox[{"subinv", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"\"\<=\>\"", 
      RowBox[{"CForm", "[", 
       RowBox[{"subinv", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"CForm", "[", 
      RowBox[{"subinv", "[", 
       RowBox[{"[", 
        RowBox[{"4", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"\"\<=\>\"", 
      RowBox[{"CForm", "[", 
       RowBox[{"subinv", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\""}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.569259132115884*^9, 3.56925915602234*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\"x0\"\>",
       CForm[$CellContext`x0],
       AutoDelete->True,
       Editable->True]},
     {
      RowBox[{"\<\"=\"\>", " ", 
       InterpretationBox["\<\"KSx0\"\>",
        CForm[$CellContext`KSx0],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"},
     {
      InterpretationBox["\<\"x1\"\>",
       CForm[$CellContext`x1],
       AutoDelete->True,
       Editable->True]},
     {
      RowBox[{"\<\"=\"\>", " ", 
       InterpretationBox["\<\"Log(KSx1 - R0)\"\>",
        CForm[
         Log[$CellContext`KSx1 - $CellContext`R0]],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"},
     {
      InterpretationBox["\<\"x2\"\>",
       CForm[$CellContext`x2],
       AutoDelete->True,
       Editable->True]},
     {
      RowBox[{"\<\"=\"\>", " ", 
       InterpretationBox["\<\"(-(H0*Power(KSx1,MP0)*Pi) - Power(2,1 + \
MP0)*H0*MY1*Pi + 2*H0*Power(KSx1,MP0)*MY1*Pi + Power(2,1 + MP0)*H0*MY2*Pi + \
2*Power(KSx1,MP0)*ArcTan(((-2*KSx2 + \
Pi)*Tan((H0*Pi)/2.))/Pi))/(2.*H0*(-Power(KSx1,MP0) - Power(2,1 + MP0)*MY1 + \
2*Power(KSx1,MP0)*MY1 + Power(2,1 + MP0)*MY2)*Pi)\"\>",
        CForm[
        Rational[
          1, 2] $CellContext`H0^(-1) (-$CellContext`KSx1^$CellContext`MP0 - 
           2^(1 + $CellContext`MP0) $CellContext`MY1 + 
           2 $CellContext`KSx1^$CellContext`MP0 $CellContext`MY1 + 
           2^(1 + $CellContext`MP0) $CellContext`MY2)^(-1) 
         Pi^(-1) (-$CellContext`H0 $CellContext`KSx1^$CellContext`MP0 Pi - 
          2^(1 + $CellContext`MP0) $CellContext`H0 $CellContext`MY1 Pi + 
          2 $CellContext`H0 $CellContext`KSx1^$CellContext`MP0 \
$CellContext`MY1 Pi + 
          2^(1 + $CellContext`MP0) $CellContext`H0 $CellContext`MY2 Pi + 
          2 $CellContext`KSx1^$CellContext`MP0 
           ArcTan[Pi^(-1) ((-2) $CellContext`KSx2 + Pi) 
             Tan[Rational[1, 2] $CellContext`H0 Pi]])],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"},
     {
      InterpretationBox["\<\"x3\"\>",
       CForm[$CellContext`x3],
       AutoDelete->True,
       Editable->True]},
     {
      RowBox[{"\<\"=\"\>", " ", 
       InterpretationBox["\<\"KSx3\"\>",
        CForm[$CellContext`KSx3],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.62419994436138*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coordinate", " ", "transformations", " ", "MKS"}], " ", "->", 
    " ", "KS"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"TableForm", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CForm", "[", 
      RowBox[{"suborg", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"\"\<=\>\"", 
      RowBox[{"CForm", "[", 
       RowBox[{"suborg", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"CForm", "[", 
      RowBox[{"suborg", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"\"\<=\>\"", 
      RowBox[{"CForm", "[", 
       RowBox[{"suborg", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"CForm", "[", 
      RowBox[{"suborg", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"\"\<=\>\"", 
      RowBox[{"CForm", "[", 
       RowBox[{"suborg", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"CForm", "[", 
      RowBox[{"suborg", "[", 
       RowBox[{"[", 
        RowBox[{"4", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"\"\<=\>\"", 
      RowBox[{"CForm", "[", 
       RowBox[{"suborg", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\""}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.569258941115765*^9, 3.569259139572497*^9}, {
  3.624114434048687*^9, 3.6241144687228107`*^9}, {3.6241958077998533`*^9, 
  3.6241958461876574`*^9}, {3.624195950077882*^9, 3.624195996919676*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\"KSx0\"\>",
       CForm[$CellContext`KSx0],
       AutoDelete->True,
       Editable->True]},
     {
      RowBox[{"\<\"=\"\>", " ", 
       InterpretationBox["\<\"x0\"\>",
        CForm[$CellContext`x0],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"},
     {
      InterpretationBox["\<\"KSx1\"\>",
       CForm[$CellContext`KSx1],
       AutoDelete->True,
       Editable->True]},
     {
      RowBox[{"\<\"=\"\>", " ", 
       InterpretationBox["\<\"Power(E,x1) + R0\"\>",
        CForm[E^$CellContext`x1 + $CellContext`R0],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"},
     {
      InterpretationBox["\<\"KSx2\"\>",
       CForm[$CellContext`KSx2],
       AutoDelete->True,
       Editable->True]},
     {
      RowBox[{"\<\"=\"\>", " ", 
       InterpretationBox["\<\"(Pi*(1 + Cot((H0*Pi)/2.)*Tan(H0*Pi*(-0.5 + (MY1 \
+ (Power(2,MP0)*(-MY1 + MY2))/Power(Power(E,x1) + R0,MP0))*(1 - 2*x2) + \
x2))))/2.\"\>",
        CForm[
        Rational[1, 2] 
         Pi (1 + Cot[Rational[1, 2] $CellContext`H0 Pi] 
           Tan[$CellContext`H0 
             Pi (Rational[-1, 2] + ($CellContext`MY1 + 
                2^$CellContext`MP0 (-$CellContext`MY1 + $CellContext`MY2) (
                   E^$CellContext`x1 + $CellContext`R0)^(-$CellContext`MP0)) (
                1 - 2 $CellContext`x2) + $CellContext`x2)])],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"},
     {
      InterpretationBox["\<\"KSx3\"\>",
       CForm[$CellContext`KSx3],
       AutoDelete->True,
       Editable->True]},
     {
      RowBox[{"\<\"=\"\>", " ", 
       InterpretationBox["\<\"x3\"\>",
        CForm[$CellContext`x3],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.624195982065494*^9, 3.624195999114263*^9}, 
   3.624196108657702*^9, 3.624199886437003*^9, 3.624199947609783*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dxdx", " ", "MKS"}], " ", "\[Rule]", " ", 
    RowBox[{"KS", " ", "in", " ", "CForm"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"dxdxMKSKSc", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<;dxdx[0][0]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[0][1]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[0][2]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[0][3]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[1][0]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[1][1]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[1][2]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[1][3]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "4"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[2][0]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[2][1]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[2][2]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[2][3]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "4"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[3][0]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[3][1]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[3][2]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "3"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[3][3]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxMKSKS", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\""}], 
     "\[IndentingNewLine]", "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5377201891380053`*^9, 3.537720192947033*^9}, {
   3.5377202330498734`*^9, 3.537720271133636*^9}, {3.537720427552824*^9, 
   3.537720658360564*^9}, {3.537720691180298*^9, 3.537720739565051*^9}, {
   3.537720776450286*^9, 3.537720796462289*^9}, {3.537720866942168*^9, 
   3.537720947115093*^9}, {3.537721038158346*^9, 3.537721081833202*^9}, 
   3.539431539244275*^9, {3.6241961578702106`*^9, 3.6241962207382936`*^9}, {
   3.624196269192643*^9, 3.6241962715352383`*^9}, {3.624196781390259*^9, 
   3.624196844191999*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\<\";dxdx[0][0]=\"\>", " ", 
       InterpretationBox["\<\"1\"\>",
        CForm[1],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[0][1]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[0][2]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[0][3]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[1][0]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[1][1]=\"\>", " ", 
       InterpretationBox["\<\"Power(E,x1)\"\>",
        CForm[E^$CellContext`x1],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[1][2]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[1][3]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[2][0]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[2][1]=\"\>", " ", 
       InterpretationBox["\<\"-(Power(2,-1 + MP0)*Power(E,x1)*H0*MP0*(MY1 - \
MY2)*Power(Pi,2)*Power(Power(E,x1) + R0,-1 - MP0)*(-1 + \
2*x2)*Cot((H0*Pi)/2.)*Power(Sec(H0*Pi*(-0.5 + (MY1 + (Power(2,MP0)*(-MY1 + \
MY2))/Power(Power(E,x1) + R0,MP0))*(1 - 2*x2) + x2)),2))\"\>",
        CForm[-2^(-1 + $CellContext`MP0) 
         E^$CellContext`x1 $CellContext`H0 $CellContext`MP0 ($CellContext`MY1 - \
$CellContext`MY2) 
         Pi^2 (E^$CellContext`x1 + $CellContext`R0)^(-1 - $CellContext`MP0) \
(-1 + 2 $CellContext`x2) Cot[Rational[1, 2] $CellContext`H0 Pi] 
         Sec[$CellContext`H0 
            Pi (Rational[-1, 2] + ($CellContext`MY1 + 
               2^$CellContext`MP0 (-$CellContext`MY1 + $CellContext`MY2) (
                  E^$CellContext`x1 + $CellContext`R0)^(-$CellContext`MP0)) (
               1 - 2 $CellContext`x2) + $CellContext`x2)]^2],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[2][2]=\"\>", " ", 
       InterpretationBox["\<\"(H0*Power(Pi,2)*(1 - 2*(MY1 + \
(Power(2,MP0)*(-MY1 + MY2))/Power(Power(E,x1) + \
R0,MP0)))*Cot((H0*Pi)/2.)*Power(Sec(H0*Pi*(-0.5 + (MY1 + (Power(2,MP0)*(-MY1 \
+ MY2))/Power(Power(E,x1) + R0,MP0))*(1 - 2*x2) + x2)),2))/2.\"\>",
        CForm[
        Rational[1, 2] $CellContext`H0 
         Pi^2 (1 - 2 ($CellContext`MY1 + 
           2^$CellContext`MP0 (-$CellContext`MY1 + $CellContext`MY2) (
              E^$CellContext`x1 + $CellContext`R0)^(-$CellContext`MP0))) 
         Cot[Rational[1, 2] $CellContext`H0 Pi] 
         Sec[$CellContext`H0 
            Pi (Rational[-1, 2] + ($CellContext`MY1 + 
               2^$CellContext`MP0 (-$CellContext`MY1 + $CellContext`MY2) (
                  E^$CellContext`x1 + $CellContext`R0)^(-$CellContext`MP0)) (
               1 - 2 $CellContext`x2) + $CellContext`x2)]^2],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[2][3]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[3][0]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[3][1]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[3][2]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[3][3]=\"\>", " ", 
       InterpretationBox["\<\"1\"\>",
        CForm[1],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.539431539718259*^9, 3.5394321799296637`*^9, 3.539620496687806*^9, 
   3.539621020462371*^9, {3.5396210817314796`*^9, 3.539621127334565*^9}, 
   3.540222401908017*^9, 3.540226486671727*^9, 3.54022666687787*^9, 
   3.540228623329979*^9, 3.540228756666259*^9, 3.568656417850609*^9, 
   3.56865655700028*^9, 3.569250242338188*^9, 3.5692588974982147`*^9, 
   3.569327988142192*^9, 3.5693649614247932`*^9, 3.5693658049143972`*^9, 
   3.5693678192589617`*^9, 3.569367854795372*^9, 3.569368544037964*^9, 
   3.588609583413381*^9, 3.5886350118345423`*^9, 3.624196222866905*^9, 
   3.624196272470997*^9, 3.624196803233924*^9, 3.624196844627055*^9, 
   3.624199886503496*^9, 3.624199994181409*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dxdx", " ", "KS"}], " ", "\[Rule]", " ", 
    RowBox[{"MKS", " ", "in", " ", "CForm"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"dxdxKSMKSc", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<;dxdx[0][0]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[0][1]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[0][2]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[0][3]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[1][0]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[1][1]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[1][2]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[1][3]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "4"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[2][0]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[2][1]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[2][2]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[2][3]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "4"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[3][0]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[3][1]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[3][2]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "3"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<;dxdx[3][3]=\>\"", 
       RowBox[{"CForm", "[", 
        RowBox[{"dxdxKSMKS", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}], "]"}]}], ",", "\"\<;\>\""}], 
     "\[IndentingNewLine]", "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5377201891380053`*^9, 3.537720192947033*^9}, {
   3.5377202330498734`*^9, 3.537720271133636*^9}, {3.537720427552824*^9, 
   3.537720658360564*^9}, {3.537720691180298*^9, 3.537720739565051*^9}, {
   3.537720776450286*^9, 3.537720796462289*^9}, {3.537720866942168*^9, 
   3.537720947115093*^9}, {3.537721038158346*^9, 3.537721081833202*^9}, 
   3.539431539244275*^9, {3.6241961578702106`*^9, 3.6241962207382936`*^9}, {
   3.624196269192643*^9, 3.6241962715352383`*^9}, {3.624196781390259*^9, 
   3.624196844191999*^9}, {3.6241970121409807`*^9, 3.6241970450316963`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\<\";dxdx[0][0]=\"\>", " ", 
       InterpretationBox["\<\"1\"\>",
        CForm[1],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[0][1]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[0][2]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[0][3]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[1][0]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[1][1]=\"\>", " ", 
       InterpretationBox["\<\"1/(KSx1 - R0)\"\>",
        CForm[($CellContext`KSx1 - $CellContext`R0)^(-1)],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[1][2]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[1][3]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[2][0]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[2][1]=\"\>", " ", 
       InterpretationBox["\<\"-((Power(2,1 + MP0)*Power(KSx1,-1 + \
MP0)*MP0*(MY1 - MY2)*ArcTan(((-2*KSx2 + \
Pi)*Tan((H0*Pi)/2.))/Pi))/(H0*Power(Power(KSx1,MP0)*(1 - 2*MY1) + Power(2,1 + \
MP0)*(MY1 - MY2),2)*Pi))\"\>",
        CForm[-2^(
           1 + $CellContext`MP0) $CellContext`H0^(-1) $CellContext`KSx1^(-1 + \
$CellContext`MP0) $CellContext`MP0 ($CellContext`KSx1^$CellContext`MP0 (1 - 
             2 $CellContext`MY1) + 
           2^(1 + $CellContext`MP0) ($CellContext`MY1 - \
$CellContext`MY2))^(-2) ($CellContext`MY1 - $CellContext`MY2) Pi^(-1) 
         ArcTan[Pi^(-1) ((-2) $CellContext`KSx2 + Pi) 
           Tan[Rational[1, 2] $CellContext`H0 Pi]]],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[2][2]=\"\>", " ", 
       InterpretationBox["\<\"(-2*Power(KSx1,MP0)*Tan((H0*Pi)/2.))/(H0*(Power(\
KSx1,MP0)*(-1 + 2*MY1) + Power(2,1 + MP0)*(-MY1 + MY2))*Power(Pi,2)*(1 + \
(Power(-2*KSx2 + Pi,2)*Power(Tan((H0*Pi)/2.),2))/Power(Pi,2)))\"\>",
        CForm[(-2) $CellContext`H0^(-1) $CellContext`KSx1^$CellContext`MP0 \
($CellContext`KSx1^$CellContext`MP0 (-1 + 2 $CellContext`MY1) + 
           2^(1 + $CellContext`MP0) (-$CellContext`MY1 + \
$CellContext`MY2))^(-1) Pi^(-2) Tan[Rational[1, 2] $CellContext`H0 Pi]/(1 + 
         Pi^(-2) ((-2) $CellContext`KSx2 + Pi)^2 
          Tan[Rational[1, 2] $CellContext`H0 Pi]^2)],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[2][3]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[3][0]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[3][1]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[3][2]=\"\>", " ", 
       InterpretationBox["\<\"0\"\>",
        CForm[0],
        AutoDelete->True,
        Editable->True]}]},
     {
      RowBox[{"\<\";dxdx[3][3]=\"\>", " ", 
       InterpretationBox["\<\"1\"\>",
        CForm[1],
        AutoDelete->True,
        Editable->True]}]},
     {"\<\";\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.624197045695908*^9, 3.6241998865395393`*^9, 
  3.6242000349998713`*^9}]
}, Open  ]]
},
WindowSize->{1853, 1067},
WindowMargins->{{122, Automatic}, {Automatic, 25}},
Magnification->1.5,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 6672, 154, 451, "Input"],
Cell[7254, 178, 2339, 53, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9630, 236, 905, 20, 43, "Input"],
Cell[10538, 258, 157189, 2544, 586, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167764, 2807, 334, 7, 69, "Input"],
Cell[168101, 2816, 1264, 36, 67, "Output"],
Cell[169368, 2854, 1123, 32, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170528, 2891, 378, 10, 43, "Input"],
Cell[170909, 2903, 260, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171206, 2914, 1482, 39, 169, "Input"],
Cell[172691, 2955, 2127, 57, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174855, 3017, 2754, 82, 119, "Input"],
Cell[177612, 3101, 3690, 105, 163, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181339, 3211, 187, 3, 43, "Input"],
Cell[181529, 3216, 4178, 116, 150, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185744, 3337, 770, 18, 94, "Input"],
Cell[186517, 3357, 3580, 100, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190134, 3462, 591, 14, 43, "Input"],
Cell[190728, 3478, 1561, 46, 158, "Output"]
}, Open  ]],
Cell[192304, 3527, 381, 9, 43, "Input"],
Cell[192688, 3538, 237, 5, 43, "Input"],
Cell[192928, 3545, 271, 6, 94, "Input"],
Cell[CellGroupData[{
Cell[193224, 3555, 1764, 49, 169, "Input"],
Cell[194991, 3606, 2893, 83, 334, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197921, 3694, 1915, 51, 169, "Input"],
Cell[199839, 3747, 2464, 75, 334, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202340, 3827, 4432, 114, 494, "Input"],
Cell[206775, 3943, 5467, 149, 506, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212279, 4097, 4482, 114, 494, "Input"],
Cell[216764, 4213, 4440, 132, 564, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
